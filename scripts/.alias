alias help-git='help-func'
alias squash='squash-func `git rev-parse --abbrev-ref HEAD`'
alias rebase='rebase-func `git rev-parse --abbrev-ref HEAD`'
alias utest='utest-func'
alias itest='itest-func'
alias refreshdb='refreshdb-func'
alias rebuild='rebuild-func'
alias ui='refreshui'
alias refreshui='refreshui-func'
alias fullbuild='fullbuild-func'
alias start-tomcat='start-tomcat-func'
alias stop-tomcat='stop-tomcat-func'
alias restart-tomcat='restart-tomcat-func'
alias gohome='gohome-func'
alias logs='logs-func'
alias access-logs='access-logs-func'
alias db-migrate='db-migrate-func'
alias jshint='jshint-func'

function help-func {
	echo
	echo Git helper commands
	echo -------------------
	echo
	echo Common topic branch commands
	echo // To squash your commits into one
	echo 	squash
	echo // To fetch and rebase changes from master into branch
	echo 	rebase
	echo
	echo Basic git commands
	echo // Get the file change status
	echo 	git status
	echo
	echo // Create local branch 'my-branch'
	echo 	git checkout -b my-branch
	echo
	echo // Delete local branch 'my-branch'
	echo 	git branch -d my-branch
	echo
	echo // Add changes to the commit
	echo	git add --all
	echo
	echo // Commit changes to local branch
	echo 	git commit
	echo
	echo // Commit changes to local branch by appending previous commit
	echo 	git commit --amend
	echo
	echo // Push local my-branch changes to server
	echo 	git push origin my-branch
	echo
	echo // Force push local my-branch changes to server
	echo 	git push -f origin my-branch
}

function jshint-func {
	mvn -f web-app/pom.xml validate -P jshint
}

function db-migrate-func {
	if [ $1 ]
	then
	filename=V$(date "+%Y.%m.%d.%H.%M.%S")__$1.sql
	gohome;
	touch db/src/main/resources/db/migration/$filename
	echo "Include sql changes in file db/src/main/resources/db/migration/$filename"
	else
	echo "usage: db-migrate <name>"
	fi
}

function squash-func {
	echo Squashing commits for brach: $1
	# switch to master branch
	git checkout master

	# ensure our master is up to date
	git pull origin master

	# switch to the branch
	git checkout $1

	# start the squash
	git rebase -i origin/master
}

function rebase-func {
	echo Rebasing commits for branch: $1
	# switch to master branch
	git checkout master

	# ensure our master is up to date
	git pull origin master

	# switch to the branch
	git checkout $1

	# start the rebase
	git rebase origin/master
}

function rebuild-func {
	# Rebuild codebase
	echo ////////////////////////////
	echo Rebuilding codebase started.
	echo ////////////////////////////
	gohome;
	mvn clean package tomcat7:deploy -DskipTests -Pdev
	echo /////////////////////////////
	echo Rebuilding codebase finished.
	echo /////////////////////////////
}

function fullbuild-func {
    # Rebuild
	rebuild;
	# Refresh data in DB
	refreshdb;
}

function refreshdb-func {
	echo ///////////////////////////
	echo Database migration started.
	echo ///////////////////////////
	gohome;
	mvn -f db/pom.xml compile flyway:clean flyway:migrate flyway:info -Pdev
	mvn -f db/pom.xml compile flyway:clean flyway:migrate flyway:info -Pprod
	echo ////////////////////////////
	echo Database migration finished.
	echo ////////////////////////////
}

function restart-tomcat-func {
	stop-tomcat-func;
	start-tomcat-func;
}

function stop-tomcat-func {
	echo Stopping tomcat...
	current_dir=`pwd`
	cd $LARSKRISTIAN_HOME/environment/tomcat/bin
	sh shutdown.sh
	cd $current_dir
    echo Stopping tomcat finished!
}

function start-tomcat-func {
	echo Starting tomcat...
	current_dir=`pwd`
	cd $LARSKRISTIAN_HOME/environment/tomcat/bin
	sh catalina.sh jpda start
	cd $current_dir
    echo Starting tomcat finished!
}

function gohome-func {
	cd $LARSKRISTIAN_HOME/larskristian.net
}

function logs-func {
	tail -f $LARSKRISTIAN_HOME/environment/tomcat/logs/catalina.out
}

function access-logs-func {
    tail -f $LARSKRISTIAN_HOME/environment/tomcat/logs/access.log
}

function itest-func {
    gohome;
	mvn -f integration-tests/pom.xml clean test -Dtest=$1
}

function utest-func {
	gohome;
	mvn -f unit-tests/pom.xml clean test -Dtest=$1
}

function refreshui-func {
	gohome;
	mvn -f web-app/pom.xml package tomcat7:deploy -Pui
}