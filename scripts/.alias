alias help-git='help-func'
alias squash='squash-func `git rev-parse --abbrev-ref HEAD`'
alias rebase='rebase-func `git rev-parse --abbrev-ref HEAD`'
alias utest='utest-func'
alias itest='itest-func'
alias refreshdb='refreshdb-func'
alias rebuild='rebuild-func'
alias fullbuild='fullbuild-func'
alias restart-tomcat='restart-tomcat-func'
alias gohome='gohome-func'
alias logs='logs-func'
alias access-logs='access-logs-func'
alias commit-and-push='commit-and-push-func'
alias db-migrate='db-migrate-func'

function help-func {
	echo 
	echo Git helper commands
	echo -------------------
	echo 
	echo Common topic branch commands
	echo // To squash your commits into one
	echo 	squash
	echo // To fetch and rebase changes from master into branch
	echo 	rebase
	echo
	echo Basic git commands
	echo // Get the file change status
	echo 	git status
	echo
	echo // Create local branch 'my-branch'
	echo 	git checkout -b my-branch
	echo
	echo // Delete local branch 'my-branch'
	echo 	git branch -d my-branch
	echo
	echo // Add changes to the commit
	echo	git add --all
	echo 
	echo // Commit changes to local branch
	echo 	git commit
	echo
	echo // Commit changes to local branch by appending previous commit
	echo 	git commit --amend
	echo
	echo // Push local my-branch changes to server
	echo 	git push origin my-branch
	echo
	echo // Force push local my-branch changes to server
	echo 	git push -f origin my-branch
}

function db-migrate-func {
	if [ $1 ]
	then
	filename=V$(date "+%Y.%m.%d.%H.%M.%S")__$1.sql
	touch $LARSKRISTIAN_HOME/larskristian.net/db/src/main/resources/db/migrations/$filename
	echo "Include sql changes in file db/src/main/resources/db/migrations/$filename"
	else
	echo "usage: db-migrate <name>"
	fi
}

function commit-and-push-func {
	gohome;
	branch_name=$(git symbolic-ref --short -q HEAD)
	git add --all
	git commit --amend --no-edit
	git push -f origin $branch_name
}


function squash-func {
	echo Squashing commits for brach: $1
	# switch to master branch
	git checkout master

	# ensure our master is up to date
	git pull origin master

	# switch to the branch
	git checkout $1

	# start the squash
	git rebase -i origin/master
}

function rebase-func {
	echo Rebasing commits for branch: $1
	# switch to master branch
	git checkout master

	# ensure our master is up to date
	git pull origin master

	# switch to the branch
	git checkout $1

	# start the rebase
	git rebase origin/master
}

function rebuild-func {
	# Rebuild codebase
	echo ////////////////////////////
	echo Rebuilding codebase started.
	echo ////////////////////////////
	gohome;
	mvn clean package tomcat7:deploy -DskipTests
	echo /////////////////////////////
	echo Rebuilding codebase finished.
	echo /////////////////////////////
}

function fullbuild-func {
    	# Rebuild
	rebuild;
	# Refresh data in DB
	refreshdb;
}

function refreshdb-func {
	echo /////////////////////////
	echo Rebuild databases started.
	echo /////////////////////////
	$LARSKRISTIAN_HOME/larskristian.net/scripts/database/build.sh $LARSKRISTIAN_HOME/environment/localcfg/db_username $LARSKRISTIAN_HOME/environment/localcfg/db_password
	echo //////////////////////////
	echo Rebuild databases finished.
	echo //////////////////////////
	echo 
	echo ////////////////////////////
	echo Bootstrap databases started.
	echo ////////////////////////////
	$LARSKRISTIAN_HOME/larskristian.net/scripts/database/bootstrap.sh $LARSKRISTIAN_HOME/environment/localcfg/db_username $LARSKRISTIAN_HOME/environment/localcfg/db_password
	echo /////////////////////////////
	echo Bootstrap databases finished.
	echo /////////////////////////////
}

function restart-tomcat-func {
	echo Restarting tomcat started.
	gohome;
	
	apache_http_server_running=$(ps aux | grep httpd | grep root | wc -l)
	if [ $apache_http_server_running -gt 0 ]
    	then
        	sudo apachectl stop
	fi
	sudo catalina.sh stop
	sudo catalina.sh jpda start
	echo Restarting tomcat finished.
}

function gohome-func {
	cd $LARSKRISTIAN_HOME/larskristian.net
}

function logs-func {
	tail -f $LARSKRISTIAN_HOME/environment/tomcat/8.0.18/logs/catalina.out
}

function access-logs-func {
    tail -f $LARSKRISTIAN_HOME/environment/tomcat/8.0.18/logs/access.log
}

function itest-func {
	cd $LARSKRISTIAN_HOME/larskristian.net/integration-tests
	mvn clean test -Dtest=$1
	cd $LARSKRISTIAN_HOME/larskristian.net
}

function utest-func {
	cd $LARSKRISTIAN_HOME/larskristian.net/unit-tests
	mvn clean test -Dtest=$1
	cd $LARSKRISTIAN_HOME/larskristian.net
}
